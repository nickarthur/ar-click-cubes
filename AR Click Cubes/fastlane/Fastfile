# This is the minimum version number required.
# Update this, if you use features of a newer version
fastlane_version "2.118.1"

fastlane_require 'dotenv'

before_all do
    Dotenv.overload '.env.secret'
end

default_platform :ios

platform :ios do

    lane :testEnvVars do
        puts "the scheme #{ENV['APP_SCHEME']}"
        puts "the id #{ENV['APP_IDENTIFIER']}"
        puts "#{ENV['APP_SCHEME']}"
        # Loaded from .env (by fastlane)
        # puts "STUFF: #{ENV['STUFF']}"

        # Loaded from .env.secret (by us in before_all)
        # puts "SOME_API_TOKEN: #{ENV['SOME_API_TOKEN']}"

        # Loaded from .env.(<env>) where <env> is passed in from `fastlane test --env <env>` (by fastlane)
        # Ex: `fastlane test --env config` loads .env.config1
        # puts "CONFIG: #{ENV['CONFIG']}"
    end

    lane :release do
        match(
            git_url: "https://www.github.com/nickarthur/certificates.git",
            type: "appstore",
            app_identifier: "#{ENV['APP_IDENTIFIER']}",
            force: true,
            readonly: false)
        # sync_code_signing
        # disable_automatic_code_signing(path: "#{ENV['APP_NAME']}.xcodeproj")
        ensure_git_status_clean
        increment_build_number
        commit_version_bump
        add_git_tag
        build_app(scheme: "#{ENV['APP_SCHEME']}")
        # enable_automatic_code_signing(path: "#{ENV['APP_NAME']}.xcodeproj")
        upload_to_testflight
    end

    lane :screenshots do
        capture_screenshots
        frame_screenshots(white: true)
        upload_to_app_store
    end

    lane :frame do
        frame_screenshots(white: true)
        upload_to_app_store
    end

    lane :tests do
        run_tests(scheme: "#{ENV['APP_SCHEME']}")
    end

    lane :beta do
        ensure_git_status_clean
        increment_build_number
        commit_version_bump
        add_git_tag
        build_app(scheme: "#{ENV['APP_SCHEME']}")
        upload_to_testflight(changelog: "First Build")
    end

    lane :betabits do
        ensure_git_status_clean
        increment_build_number
        commit_version_bump
        add_git_tag
        build_app(scheme: "#{ENV['APP_SCHEME']}",
        workspace: "#{ENV['APP_NAME']}.xcworkspace",
        include_bitcode: true)
        upload_to_testflight(changelog: "First Build")
    end


    desc "Creating a code signing certificate and provisioning profile"
    lane :provision do
        produce(
            app_name: "#{ENV['APP_NAME']}",
            language: 'English',
            app_version: '1.0',
            sku: "#{ENV['APP_IDENTIFIER']}"
        )
        cert
        sigh(force: true)
    end

    lane :screenshot do
        capture_screenshots
        frame_screenshots(white: true)
        upload_to_app_store
    end

    desc "Create ipa"
    lane :build do
        ensure_git_status_clean
        increment_build_number
        commit_version_bump
        add_git_tag
        gym
    end

    desc "Upload to App Store and submit for review"
    lane :upload do
        deliver(
            submit_for_review: true
        )
    end

    desc "Provision, take screenshots, build and upload to App Store"
    lane :do_everything do
        provision
        screenshot
        build
        upload
    end

    error do |lane, exception|
    # This block is called if there was an error running a lane.
    end

end

